from django.contrib.auth import authenticate
import base64
from django.http import HttpResponse


class HttpBasicAuthenticationMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request):
        if "HTTP_AUTHORIZATION" in request.META:
            auth = request.META["HTTP_AUTHORIZATION"].split()
            if len(auth) == 2:
                if auth[0].lower() == "basic":
                    uname, passwd = base64.b64decode(auth[1]).decode("utf-8").split(":", 1)
                    user = authenticate(username=uname, password=passwd)
                    if user is not None and user.is_active is True:
                        request.user = user
                        return self.get_response(request)

        # No authorization header was provided or the authentication failed. Return a 401 and ask for credentials.
        response = HttpResponse()
        response.status_code = 401
        response["WWW-Authenticate"] = 'Basic realm=""'
        return response
